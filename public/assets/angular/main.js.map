{"version":3,"file":"main.js","mappings":"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","sources":["./resources/angular/src/app/app-routing.module.ts","./resources/angular/src/app/app.component.html","./resources/angular/src/app/app.component.ts","./resources/angular/src/app/app.module.ts","./resources/angular/src/app/app.service.ts","./resources/angular/src/app/auth/login/login.component.ts","./resources/angular/src/app/auth/login/login.component.html","./resources/angular/src/app/auth/register/register.component.ts","./resources/angular/src/app/auth/register/register.component.html","./resources/angular/src/app/component/about/about.component.ts","./resources/angular/src/app/component/about/about.component.html","./resources/angular/src/app/component/admin-book/admin-book.component.ts","./resources/angular/src/app/component/admin-book/admin-book.component.html","./resources/angular/src/app/component/home/home.component.html","./resources/angular/src/app/component/home/home.component.ts","./resources/angular/src/app/model/book.model.ts","./resources/angular/src/app/model/category.model.ts","./resources/angular/src/app/service/auth.service.ts","./resources/angular/src/app/service/book.service.ts","./resources/angular/src/app/service/category.service.ts","./resources/angular/src/app/service/cookie.service.ts","./resources/angular/src/main.ts","ignored|/var/www/html/openpbx/node_modules/crypto-js|crypto"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './component/home/home.component'\nimport { AboutComponent } from './component/about/about.component'\nimport { AdminBookComponent } from './component/admin-book/admin-book.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'admin', component: AdminBookComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Welcome</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/about\">About Us</a>\n        </li>\n        <li *ngIf=\"AuthService.getToken()==''\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n          </li>\n          <li *ngIf=\"AuthService.getToken()==''\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/register\">Register</a>\n          </li>\n          <li *ngIf=\"AuthService.getToken()!=''\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\n          </li>\n        <li *ngIf=\"AuthService.getToken()!=''\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/admin\">Admin</a>\n          </li>\n        </ul>\n    </div>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n\n<div [hidden]=\"notification_status.show==false\"  class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n    <div id=\"liveToast\" class=\"notification \"  [ngClass]=\"flag_status? 'status_g': 'status_r'\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n\n        <strong class=\"me-auto\">{{notification_status.title}}</strong>\n        <small>{{notification_status.time}}</small>\n        <button type=\"button\" (click)=\"notification_status.show=false\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"toast-body\">\n        {{notification_status.message}}\n      </div>\n    </div>\n  </div>\n\n","import { Component } from '@angular/core';\nimport { AuthService } from './service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n  token ='';\n  flag_status:boolean =true;\n  notification_status:any={\"show\":false};\n  constructor(public AuthService: AuthService) {\n    this.token=this.AuthService.getToken();\n  }\n  ngOnInit(): void {\n  }\n  showMessage(title:string,message:string,time:string,err:number=0){\n    if(err==1){this.flag_status=false;}else{this.flag_status=true;}\n    this.notification_status.show=true;\n    this.notification_status.title=title;\n    this.notification_status.message=message;\n    this.notification_status.time=time;\n\n     setTimeout(() => {\n         this.notification_status.show = false;\n       }, 3000);\n }\n logout(){\nthis.AuthService.cookie.delCookie('token');\n    this.token='';\n    location.reload();\n }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { AboutComponent } from './component/about/about.component';\nimport { AdminBookComponent } from './component/admin-book/admin-book.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BookService } from './service/book.service';\nimport { CategoryService } from './service/category.service';\nimport { CookieService } from './service/cookie.service';\nimport { AppService } from './app.service';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    AdminBookComponent,\n    LoginComponent,\n    RegisterComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [AppService, BookService,CategoryService,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, EventEmitter } from \"@angular/core\";\n// import {Http, Response,Headers} from '@angular/http';\nimport { Location } from '@angular/common';\n\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n    public apiUrl: any;\n\n    constructor(private http: HttpClient,private location:Location) {\nthis.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\n\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n      }\n\n      getApiUrl(endpoint: string): string {\n        const domainUrl = this.location.prepareExternalUrl('');\n        const apiUrl = `${domainUrl}/api/${endpoint}`;\n        return apiUrl;\n      }\n      addDefaultParam(method: string = \"post\", data: any = {}) {\n        data = {\n            ...data,\n            user_token: 'test',\n          };\n          // data['website_id'] = data['website_id']||this.website_id;\n          // data['user_token'] = this.user_token;\n          if (method == \"post\") {\n            return data;\n          } else {\n            return typeof data == \"string\"\n              ? data\n              : Object.keys(data)\n                  .map(function (k) {\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n                  })\n                  .join(\"&\");\n          }\n\n      }\n\n\n}\n","import { Component } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app/app.component';\nimport { Observer } from 'rxjs';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n    public form:any ={};\n    constructor(private AuthService: AuthService,private router: Router,private main:AppComponent) {}\n    ngOnInit(): void {\n    //this.register();\n    }\n    login() {\n\n        const observer: Observer<any> = {\n            next: response => {\n              if(response.token){\n                this.AuthService.cookie.storeCookie('token',response.token);\n                this.router.navigate(['/admin']);\n              }else{\n                this.main.showMessage('Error :'+response.status,\"Error Auth\",'',1);\n              }\n            },\n            error: error => {\n              console.log('Error:', error.error);\n              this.main.showMessage('Error :'+error.status,error.error.error,'',1);\n            },\n            complete: () => {\n              console.log('Complete');\n            }\n          };\n\n          this.AuthService.login(this.form).subscribe(observer);\n        this.AuthService.login(this.form).subscribe((data: any) => {\n            console.log(\"e\",data);\n            if(data.token){\n\n                this.AuthService.cookie.storeCookie('token',data.token);\n                this.router.navigate(['/admin']);\n            }else if(data.error){\n\n                this.main.showMessage('Error :'+data.status,data.error,'');\n            }\n          console.log(\"login\",data);\n      }\n      )\n      ;\n\n      }\n}\n","<section class=\"vh-100\" style=\"background-color: #eee;\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 25px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign in</p>\n\n                  <form class=\"mx-1 mx-md-4\">\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.email\" type=\"email\" id=\"form3Example3c\" class=\"form-control\"  [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.password\" type=\"password\" id=\"form3Example4c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label>\n                      </div>\n                    </div>\n\n\n                    <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button  (click)=\"login()\" type=\"button\" class=\"btn btn-primary btn-lg\">Login</button>\n                    </div>\n\n                  </form>\n\n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Observer } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../app.component';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n    public form:any ={};\n    constructor(private AuthService: AuthService,private router: Router,private main : AppComponent) {}\n    ngOnInit(): void {\n    //this.register();\n    }\n    register() {\n        const observer: Observer<any> = {\n            next: response => {\n                if(response.token){\n                    this.AuthService.cookie.storeCookie('token',response.token);\n                    this.router.navigate(['/admin']);\n                    this.main.showMessage('Success','Successfully Logged','');\n                }\n              let token=  this.AuthService.cookie.readCookie('token');\n              console.log(\"token--\",token);\n              console.log(\"login\",response);\n            },\n            error: error => {\n              console.log('Error:', error.error);\n              this.main.showMessage('Error :'+error.status,error.error.message,'',1);\n            },\n            complete: () => {\n              console.log('Complete');\n            }\n          };\n\n        this.AuthService.register(this.form).subscribe(observer);\n\n      }\n}\n","<section class=\"vh-100\" style=\"background-color: #eee;\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 25px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\n\n                  <form class=\"mx-1 mx-md-4\">\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.name\" type=\"text\" id=\"form3Example1c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.email\" type=\"email\" id=\"form3Example3c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" />\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.password\" type=\"password\" id=\"form3Example4c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label>\n                      </div>\n                    </div>\n\n\n                    <div class=\"form-check d-flex justify-content-center mb-5\">\n                      <input [(ngModel)]=\"form.tos\" class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" [ngModelOptions]=\"{standalone: true}\" />\n                      <label class=\"form-check-label\" for=\"form2Example3\">\n                        I agree all statements in <a href=\"#!\">Terms of service</a>\n                      </label>\n                    </div>\n\n                    <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button  (click)=\"register()\" type=\"button\" class=\"btn btn-primary btn-lg\">Register</button>\n                    </div>\n\n                  </form>\n\n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n","<p>Amol Patil</p>\n<a href=\"http://github.com/djamol\">GitHUB</a>\n","import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Book } from '../../model/book.model';\nimport { BookService } from '../../service/book.service';\nimport { Category } from '../../model/category.model';\nimport { CategoryService } from '../../service/category.service';\nimport { AppComponent } from '../../app.component';\nimport { AuthService } from '../../service/auth.service';\n@Component({\n  selector: 'app-admin-book',\n  templateUrl: './admin-book.component.html',\n  styleUrls: ['./admin-book.component.css']\n})\nexport class AdminBookComponent {\n    books: Book[] = [];\n    filteredBooks: any[] = [];\n    page_data:any;\n    unFilteredBooks:boolean=false;\n    searchKey: string = '';\n    category_id:any='0';\n    show :number =1;\n    selectedCategory: Category =new Category();\n  categories: Category[]=[];\n  isEditing :any[]= [];\n  selectedBook: Book = new Book();\n\n    constructor(private bookService: BookService, private categoryService: CategoryService,private cdr: ChangeDetectorRef,\n        private main:AppComponent,private auth:AuthService) {}\n\n    ngOnInit(): void {\n      this.getBooks();\n      this.getCategories();\n      console.log(\"auth\",this.auth.getToken());\n      console.log(\"auth api\",this.auth.apiUrl);\n    }\n/*\n    getBooks() {\n      this.bookService.getBooks().subscribe((data: Book[]) => {\n        this.books = data;\n        this.filteredBooks = this.books; // Initialize the filtered list\n      });\n    }\n*/\ntoggleEditing(book:any) {\n    if (this.isEditing[book.id]) {\n        this.isEditing[book.id]=false;\n        this.editBook(book);\n        this.getBooks();\n    } else {\n      this.isEditing[book.id] = true;\n    }\n  }\n  toggleEditingCategories(category:any) {\n    if (this.isEditing[category.id]) {\n        this.isEditing[category.id]=false;\n        this.editCategory(category);\n        this.getCategories();\n    } else {\n      this.isEditing[category.id] = true;\n    }\n  }\n\n     filterBooks() {\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredBooks = this.books.filter(book =>\n                book.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredBooks=true;\n        return;\n        }\n        this.unFilteredBooks=false;\n        this.filteredBooks = this.books.filter(book =>\n          book.title.toLowerCase().includes(this.searchKey.toLowerCase()) && book.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\ngetBooks() {\n    this.bookService.getBooks().subscribe(books => {\n      this.books = books.data;\n      this.filteredBooks=this.books;\n      this.page_data =books;\n      this.unFilteredBooks=true;\n    });\n  }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n\n  addBook() {\n    this.bookService.createBook(this.selectedBook).subscribe(() => {\n      this.getBooks();\n      this.selectedBook = new Book();\n      this.main.showMessage('Success','Successfully created a new book.','');\n    });\n  }\n\n  editBook(book: Book) {\n    this.bookService.updateBook(book.id, book).subscribe(() => {\n      this.getBooks();\n      this.main.showMessage('Success','Book successfully updated','');\n    });\n  }\n\n  deleteBook(book: Book) {\n    this.bookService.deleteBook(book.id).subscribe(() => {\n      this.getBooks();\n      this.main.showMessage('Success','Book successfully deleted','');\n    });\n  }\n\n  addCategory() {\n\n    this.categoryService.createCategory(this.selectedCategory).subscribe(() => {\n      this.getCategories();\n      this.selectedCategory = new Category();\n      this.main.showMessage('Success','Successfully created a new category.','');\n    });\n\n  }\n\n  editCategory(category: Category) {\n\n    this.categoryService.updateCategory(category.id, category).subscribe(() => {\n      this.getCategories();\n      this.main.showMessage('Success','Category successfully updated','');\n    });\n\n  }\n\n  deleteCategory(category: Category) {\n    this.categoryService.deleteCategory(category.id).subscribe(() => {\n      this.getCategories();\n      this.main.showMessage('Success','Category successfully deleted','');\n    });\n  }\n}\n","<div class=\"container\">\n        <div class=\"btn-group\">\n            <button type=\"button\" (click)=\"show=1\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Books\n            </button>\n            <button type=\"button\" (click)=\"show=2\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Add Book\n            </button>\n            <button type=\"button\" (click)=\"show=3\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Categories\n            </button>\n        </div>\n<div *ngIf=\"show==1\">\n    <h1>Book List</h1>\n    <form>\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" value=\"\" placeholder=\"Search by Title\" [(ngModel)]=\"searchKey\" (input)=\"filterBooks()\" [ngModelOptions]=\"{standalone: true}\">\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"category_id\" (change)=\"filterBooks()\" [ngModelOptions]=\"{standalone: true}\">\n          <option value=\"All\">All Categories</option>\n          <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n        </select>\n      </div>\n    </form>\n    <div class=\"container\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Author</th>\n              <th>ISBN</th>\n              <th>Genre</th>\n              <th>Category</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let book of filteredBooks\">\n                <td>\n                    <ng-container *ngIf=\"!isEditing[book.id]\">\n                        {{ book.title }}\n                      </ng-container>\n                      <ng-container *ngIf=\"isEditing[book.id]\">\n                        <input type=\"text\" [(ngModel)]=\"book.title\" [ngModelOptions]=\"{standalone: true}\">\n                      </ng-container>\n                </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[book.id]\">\n                    {{ book.author }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[book.id]\">\n                    <input type=\"text\" [(ngModel)]=\"book.author\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[book.id]\">\n                    {{ book.isbn }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[book.id]\">\n                    <input type=\"text\" [(ngModel)]=\"book.isbn\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[book.id]\">\n                    {{ book.genre }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[book.id]\">\n                    <input type=\"text\" [(ngModel)]=\"book.genre\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[book.id]\">\n                    {{ book.category_id }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[book.id]\">\n                    <select [(ngModel)]=\"book.category_id\" name=\"category_id\" id=\"category_id\" class=\"form-control\" required [ngModelOptions]=\"{standalone: true}\">\n                        <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n                      </select>\n                  </ng-container>\n              </td>\n              <td>\n                <button class=\"btn btn-primary\" (click)=\"toggleEditing(book)\">Edit</button>\n                <button class=\"btn btn-danger\" (click)=\"deleteBook(book)\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <nav *ngIf=\"unFilteredBooks\" aria-label=\"Page navigation\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\" [class.disabled]=\"!page_data.prevPageUrl\">\n              <a *ngIf=\"page_data.prevPageUrl\" class=\"page-link\" href=\"{{ page_data.prevPageUrl }}\">&laquo; Previous</a>\n              <span *ngIf=\"!page_data.prevPageUrl\" class=\"page-link\">&laquo; Previous</span>\n            </li>\n            <li class=\"page-item\" [class.active]=\"page_data.currentPage === page_data.link.label\" *ngFor=\"let link of page_data.links\">\n              <a *ngIf=\"page_data.link.url\" class=\"page-link\" href=\"{{ page_data.link.url }}\">{{ link.label }}</a>\n              <span *ngIf=\"!page_data.link.url\" class=\"page-link\">{{ link.label }}</span>\n            </li>\n            <li class=\"page-item\" [class.disabled]=\"!page_data.nextPageUrl\">\n              <a *ngIf=\"page_data.nextPageUrl\" class=\"page-link\" href=\"{{ page_data.nextPageUrl }}\">Next &raquo;</a>\n              <span *ngIf=\"!page_data.nextPageUrl\" class=\"page-link\">Next &raquo;</span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n\n    </div>\n    </div>\n\n    <div *ngIf=\"show==2\">\n\n        <h2>Add Book</h2>\n<form (ngSubmit)=\"addBook()\">\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.title\" name=\"title\" placeholder=\"Title\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.author\" name=\"author\" placeholder=\"Author\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"category_id\">Categories</label>\n        <select [(ngModel)]=\"selectedBook.category_id\" name=\"category_id\" id=\"category_id\" class=\"form-control\" required [ngModelOptions]=\"{standalone: true}\">\n            <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.description\" name=\"description\" placeholder=\"Description\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" />\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.genre\" name=\"genre\" placeholder=\"Genre\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.image\" name=\"image\" placeholder=\"Image\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.isbn\" name=\"isbn\" placeholder=\"ISBN\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n    </div>\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"selectedBook.publisher\" name=\"publisher\" placeholder=\"Publisher\" required class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n    </div>\n    <!-- Add more input fields for other book properties -->\n    <button type=\"submit\" class=\"btn btn-primary\">Add Book</button>\n</form>\n\n</div>\n<div *ngIf=\"show==3\">\n\n        <h2 >Add Category</h2>\n        <form (ngSubmit)=\"addCategory()\">\n\n          <input [(ngModel)]=\"selectedCategory.name\" placeholder=\"Category Name\" required   [ngModelOptions]=\"{standalone: true}\"/>\n          <button type=\"submit\">Add Category</button>\n        </form>\n\n        <div class=\"container\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Category Name</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let category of categories\">\n                    <td>\n                        {{category.id}}\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"!isEditing[category.id]\">\n                            {{ category.name }}\n                          </ng-container>\n                          <ng-container *ngIf=\"isEditing[category.id]\">\n                            <input type=\"text\" [(ngModel)]=\"category.name\"  [ngModelOptions]=\"{standalone: true}\">\n                          </ng-container>\n                    </td>\n                  <td>\n                    <button class=\"btn btn-primary\" (click)=\"toggleEditingCategories(category)\">Edit</button>\n                    <button class=\"btn btn-danger\" (click)=\"deleteCategory(category)\">Delete</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n    </div>\n\n\n  </div>\n","<div class=\"container\">\n    <div  class=\"row\">\n        <form>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" value=\"\" placeholder=\"Search by Title\" [(ngModel)]=\"searchKey\" (input)=\"filterBooks()\" [ngModelOptions]=\"{standalone: true}\">\n            </div>\n            <div class=\"form-group\">\n              <select class=\"form-control\" [(ngModel)]=\"category_id\" (change)=\"filterBooks()\" [ngModelOptions]=\"{standalone: true}\">\n                <option value=\"All\">All Categories</option>\n                <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n              </select>\n            </div>\n          </form>\n    </div>\n    <div class=\"row\" >\n        <div class=\"col-md-4\" *ngFor=\"let book of filteredBooks\">\n            <img src=\"{{book.image}}\" class=\"card-img-top\" alt=\"Book Image\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{book.title}}</h5>\n              <h6 class=\"card-subtitle mb-2 text-muted\">{{book.author}}</h6>\n              <p class=\"card-text\">{{book.description}}</p>\n              <button class=\"btn btn-primary\">Add to Cart</button>\n            </div>\n          </div>\n        </div>\n\n</div>\n","import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Book } from '../../model/book.model';\nimport { Category } from '../../model/category.model';\nimport { BookService } from '../../service/book.service';\nimport { CategoryService } from '../../service/category.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n    books: Book[] = [];\n    filteredBooks: any[] = [];\n    categories: Category[]=[];\n    searchKey: string = '';\n    page_data:any;\n    category_id:any='0';\n    login_b:boolean=true;\n    unFilteredBooks:boolean=false;\n    constructor(private bookService: BookService,private cdr: ChangeDetectorRef, private categoryService: CategoryService) {}\n    ngOnInit(): void {\n    //this.login();\n    this.getBooks();\n    this.getCategories();\n    }\n/*\n    login() {\n      this.AuthService.login({\n        \"name\":\"amol\",\n        \"email\":\"amol@asf.in\",\n        \"password\":\"password\"\n    }).subscribe((data: any) => {\n        this.AuthService.cookie.storeCookie('token',data.token);\n        console.log(\"login\",data.token);\n    });\n    } */\n    buttonToogle(){\n        this.login_b=!this.login_b;\n    }\n    getBooks() {\n        this.bookService.getBooks().subscribe(books => {\n            this.books = books.data;\n            this.filteredBooks=this.books;\n            this.page_data =books;\n            this.unFilteredBooks=true;\n        });\n      }\n\n      filterBooks() {\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredBooks = this.books.filter(book =>\n                book.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredBooks=true;\n        return;\n        }\n        this.unFilteredBooks=false;\n        this.filteredBooks = this.books.filter(book =>\n          book.title.toLowerCase().includes(this.searchKey.toLowerCase()) && book.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n}\n","export class Book {\n    id: number = 0;\n    title: string = '';\n    author: string = '';\n    genre: string = '';\n    description: string = '';\n    isbn: string = '';\n    image: string = '';\n    published: Date = new Date();\n    publisher: string = '';\n    category_id: number = 0;\n  }\n","export class Category {\n    id: number = 0;\n    name: string = '';\n  }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { catchError } from 'rxjs/operators';\n\nimport { CookieService } from './cookie.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    public apiUrl: any;\n\n\n  constructor(private http: HttpClient,private location:Location,public cookie :CookieService) {\n    this.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n//this.apiUrl=\"https://amol.com/api\"\n//console.log(\"apiURL\",this.apiUrl);\n\n  }\n  getApiUrl(endpoint: string): string {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  // HTTP headers, if needed\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n  };\n  getToken(){\n    return this.cookie.readCookie('token');\n  }\n  login(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/login\", auth, this.httpOptions);\n  }\n  register(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/register\", auth, this.httpOptions).pipe(\n        catchError((error) => {\n            throw error;\n        })\n      );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from '../model/book.model';\nimport { Location } from '@angular/common';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n    public apiUrl: any;\n    public token = '';\n  constructor(private http: HttpClient,private location:Location,private auth:AuthService) {\nthis.apiUrl=this.auth.apiUrl;\nconsole.log(\"api-book\",this.apiUrl);\n  }\n  // HTTP headers, if needed\n  httpOptions = {};\n  setHeader(){\n    let auth = 'Bearer ' + this.auth.getToken();\n    console.log(\"auth test->\",auth.replaceAll('\"',''));\n    this.httpOptions ={\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': auth.replaceAll('\"','')\n        })\n      };\n  }\n  // Fetch all books\n  getBooks(): Observable<any> {\n    return this.http.get<any>(this.apiUrl+ \"/books\");\n  }\n\n  // Create a new book\n  createBook(book: Book): Observable<Book> {\n    this.setHeader();\n    return this.http.post<Book>(this.apiUrl+ \"/books\", book, this.httpOptions);\n  }\n\n\n  // Update an existing book\n  updateBook(id: number, book: Book): Observable<Book> {\n    this.setHeader();\n    const url = `${this.apiUrl}/books/${id}`;\n    return this.http.put<Book>(url, book, this.httpOptions);\n  }\n\n  // Delete a book by ID\n  deleteBook(id: number): Observable<void> {\n    this.setHeader();\n    const url = `${this.apiUrl}/books/${id}`;\n    return this.http.delete<void>(url, this.httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../model/category.model';\nimport { Location } from '@angular/common';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n    public apiUrl: any;\n\n  constructor(private http: HttpClient,private location:Location,private auth:AuthService) {\n    this.apiUrl=this.auth.apiUrl;\n    console.log(\"api-categories\",this.apiUrl);\n\n  }\n  getApiUrl(endpoint: string): string {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  // HTTP headers, if needed\n  setHeader(){\n    let auth = 'Bearer ' + this.auth.getToken();\n    console.log(\"auth test->\",auth.replaceAll('\"',''));\n    this.httpOptions ={\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': auth.replaceAll('\"','')\n        })\n      };\n  }\n  httpOptions = {};\n  // Fetch all Categorys\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiUrl+ \"/categories\");\n  }\n\n  // Create a new Category\n  createCategory(Category: Category): Observable<Category> {\n    this.setHeader();\n    return this.http.post<Category>(this.apiUrl+ \"/categories\", Category, this.httpOptions);\n  }\n\n\n  // Update an existing Category\n  updateCategory(id: number, Category: Category): Observable<Category> {\n    this.setHeader();\n    const url = `${this.apiUrl}/categories/${id}`;\n    return this.http.put<Category>(url, Category, this.httpOptions);\n  }\n\n  // Delete a Category by ID\n  deleteCategory(id: number): Observable<void> {\n    this.setHeader();\n    const url = `${this.apiUrl}/categories/${id}`;\n    return this.http.delete<void>(url, this.httpOptions);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as CryptoJS from 'crypto-js';\n@Injectable()\nexport class CookieService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  public getCookie(name: string): string {\n    const cookies = this.document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return '';\n  }\n\n  public storeCookie(key:string,value:string){\n    const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(value), 'secretKey').toString();\n    const expirationDate = new Date();\n    expirationDate.setTime(expirationDate.getTime() + (60 * 60 * 1000)); // 1 hour from now\n    const cookieOptions = {\n    expires: expirationDate.toUTCString(),\n    path: '/'\n    };\n    document.cookie = `${key}=${encryptedData}; ${Object.entries(cookieOptions).map(([k, v]) => `${k}=${v}`).join('; ')}`;\n  }\n  public readCookie(key:string){\n   let value= this.getCookie(key);\n    return   CryptoJS.AES.decrypt(value, 'secretKey').toString(CryptoJS.enc.Utf8);\n  }\n  public delCookie(key:string){\n    document.cookie = `${key}=; expires=Mon, 01 Jan 2000 00:00:00 UTC; path=/`;\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["RouterModule","HomeComponent","AboutComponent","AdminBookComponent","LoginComponent","RegisterComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","AuthService","token","getToken","ngOnInit","showMessage","title","message","time","err","flag_status","notification_status","show","setTimeout","logout","cookie","delCookie","location","reload","selectors","decls","vars","consts","template","BrowserModule","FormsModule","HttpClientModule","BookService","CategoryService","CookieService","AppService","AppModule","bootstrap","declarations","http","apiUrl","getApiUrl","window","href","replace","console","log","endpoint","domainUrl","prepareExternalUrl","addDefaultParam","method","data","user_token","Object","keys","map","k","encodeURIComponent","join","factory","providedIn","router","main","login","observer","next","response","storeCookie","navigate","status","error","complete","form","subscribe","ctx","register","readCookie","Book","Category","bookService","categoryService","cdr","auth","getBooks","getCategories","toggleEditing","book","isEditing","id","editBook","toggleEditingCategories","category","editCategory","filterBooks","category_id","filteredBooks","books","filter","toLowerCase","includes","searchKey","unFilteredBooks","detectChanges","page_data","categories","addBook","createBook","selectedBook","updateBook","deleteBook","addCategory","createCategory","selectedCategory","updateCategory","deleteCategory","buttonToogle","login_b","Date","HttpHeaders","catchError","headers","post","httpOptions","pipe","setHeader","replaceAll","get","url","put","delete","DOCUMENT","CryptoJS","document","getCookie","name","cookies","split","i","length","trim","startsWith","substring","key","value","encryptedData","AES","encrypt","JSON","stringify","toString","expirationDate","setTime","getTime","cookieOptions","expires","toUTCString","entries","v","decrypt","enc","Utf8","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[22]}