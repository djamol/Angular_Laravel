{"version":3,"file":"main.js","mappings":"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","sources":["./resources/angular/src/app/app-routing.module.ts","./resources/angular/src/app/app.component.html","./resources/angular/src/app/app.component.ts","./resources/angular/src/app/app.module.ts","./resources/angular/src/app/app.service.ts","./resources/angular/src/app/auth/login/login.component.ts","./resources/angular/src/app/auth/login/login.component.html","./resources/angular/src/app/auth/register/register.component.ts","./resources/angular/src/app/auth/register/register.component.html","./resources/angular/src/app/component/about/about.component.ts","./resources/angular/src/app/component/about/about.component.html","./resources/angular/src/app/component/admin/admin.component.ts","./resources/angular/src/app/component/admin/admin.component.html","./resources/angular/src/app/component/home/home.component.html","./resources/angular/src/app/component/home/home.component.ts","./resources/angular/src/app/model/category.model.ts","./resources/angular/src/app/model/movie.model.ts","./resources/angular/src/app/service/auth.service.ts","./resources/angular/src/app/service/category.service.ts","./resources/angular/src/app/service/cookie.service.ts","./resources/angular/src/app/service/movie.service.ts","./resources/angular/src/main.ts","ignored|/var/www/html/openpbx/node_modules/crypto-js|crypto"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './component/home/home.component'\nimport { AboutComponent } from './component/about/about.component'\nimport { AdminComponent } from './component/admin/admin.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'movie/:id', component: RegisterComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Welcome</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/about\">About Us</a>\n        </li>\n        <li *ngIf=\"AuthService.getToken()==''\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n          </li>\n          <li *ngIf=\"AuthService.getToken()==''\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/register\">Register</a>\n          </li>\n          <li *ngIf=\"AuthService.getToken()!=''\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"logout()\">Logout</a>\n          </li>\n        <li *ngIf=\"AuthService.getToken()!=''&& AuthService.adminStatus\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/admin\">Admin</a>\n          </li>\n        </ul>\n    </div>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n\n<div [hidden]=\"notification_status.show==false\"  class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n    <div id=\"liveToast\" class=\"notification \"  [ngClass]=\"flag_status? 'status_g': 'status_r'\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n\n        <strong class=\"me-auto\">{{notification_status.title}}</strong>\n        <small>{{notification_status.time}}</small>\n        <button type=\"button\" (click)=\"notification_status.show=false\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"toast-body\">\n        {{notification_status.message}}\n      </div>\n    </div>\n  </div>\n\n","import { Component } from '@angular/core';\nimport { AuthService } from './service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n  token ='';\n  admin =false;\n  flag_status:boolean =true;\n  notification_status:any={\"show\":false};\n  constructor(public AuthService: AuthService) {\n    this.token=this.AuthService.getToken();\n  }\n  ngOnInit(): void {\n    if(!this.AuthService.adminStatus)\n    this.checkAdmin();\n\n  }\n  checkAdmin(){\n    this.AuthService.isAdmin().subscribe(res=> {\n        console.log(res);\n        if(res.status==1){\n            this.AuthService.adminStatus=true;\n        }\n    });\n  }\n  showMessage(title:string,message:string,time:string,err:number=0){\n    if(err==1){this.flag_status=false;}else{this.flag_status=true;}\n    this.notification_status.show=true;\n    this.notification_status.title=title;\n    this.notification_status.message=message;\n    this.notification_status.time=time;\n\n     setTimeout(() => {\n         this.notification_status.show = false;\n       }, 3000);\n }\n logout(){\nthis.AuthService.cookie.delCookie('token');\n    this.token='';\n    location.reload();\n }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { AboutComponent } from './component/about/about.component';\nimport { AdminComponent } from './component/admin/admin.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MovieService } from './service/movie.service';\nimport { CategoryService } from './service/category.service';\nimport { CookieService } from './service/cookie.service';\nimport { AppService } from './app.service';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    AdminComponent,\n    LoginComponent,\n    RegisterComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [AppService, MovieService,CategoryService,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, EventEmitter } from \"@angular/core\";\n// import {Http, Response,Headers} from '@angular/http';\nimport { Location } from '@angular/common';\n\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n    public apiUrl: any;\n\n    constructor(private http: HttpClient,private location:Location) {\nthis.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\n\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n      }\n\n      getApiUrl(endpoint: string): string {\n        const domainUrl = this.location.prepareExternalUrl('');\n        const apiUrl = `${domainUrl}/api/${endpoint}`;\n        return apiUrl;\n      }\n      addDefaultParam(method: string = \"post\", data: any = {}) {\n        data = {\n            ...data,\n            user_token: 'test',\n          };\n          // data['website_id'] = data['website_id']||this.website_id;\n          // data['user_token'] = this.user_token;\n          if (method == \"post\") {\n            return data;\n          } else {\n            return typeof data == \"string\"\n              ? data\n              : Object.keys(data)\n                  .map(function (k) {\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n                  })\n                  .join(\"&\");\n          }\n\n      }\n\n\n}\n","import { Component } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../../app/app.component';\nimport { Observer } from 'rxjs';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n    public form:any ={};\n    constructor(private AuthService: AuthService,private router: Router,private main:AppComponent) {}\n    ngOnInit(): void {\n    //this.register();\n    }\n    login() {\n\n        const observer: Observer<any> = {\n            next: response => {\n              if(response.token){\n                this.AuthService.cookie.storeCookie('token',response.token);\n               if(response.admin==1){this.AuthService.adminStatus=true;}\n                this.router.navigate(['/admin']);\n              }else{\n                this.main.showMessage('Error :'+response.status,\"Error Auth\",'',1);\n              }\n            },\n            error: error => {\n              console.log('Error:', error.error);\n              this.main.showMessage('Error :'+error.status,error.error.error,'',1);\n            },\n            complete: () => {\n              console.log('Complete');\n            }\n          };\n\n          this.AuthService.login(this.form).subscribe(observer);\n\n\n      }\n}\n","<section class=\"vh-100\" style=\"background-color: #eee;\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 25px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign in</p>\n\n                  <form class=\"mx-1 mx-md-4\">\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fa fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.email\" type=\"email\" id=\"form3Example3c\" class=\"form-control\"  [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fa fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.password\" type=\"password\" id=\"form3Example4c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label>\n                      </div>\n                    </div>\n\n\n                    <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button  (click)=\"login()\" type=\"button\" class=\"btn btn-primary btn-lg\">Login</button>\n                    </div>\n\n                  </form>\n\n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Observer } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../../app.component';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n    public form:any ={};\n    constructor(private AuthService: AuthService,private router: Router,private main : AppComponent) {}\n    ngOnInit(): void {\n    //this.register();\n    }\n    register() {\n        const observer: Observer<any> = {\n            next: response => {\n                if(response.token){\n                    this.AuthService.cookie.storeCookie('token',response.token);\n                    this.router.navigate(['/admin']);\n                    this.main.showMessage('Success','Successfully Logged','');\n                }\n              let token=  this.AuthService.cookie.readCookie('token');\n              console.log(\"token--\",token);\n              console.log(\"login\",response);\n              this.main.showMessage('Success','Successfully Registered','');\n            },\n            error: error => {\n              console.log('Error:', error.error);\n              this.main.showMessage('Error :'+error.status,error.error.message,'',1);\n            },\n            complete: () => {\n              console.log('Complete');\n            }\n          };\n\n        this.AuthService.register(this.form).subscribe(observer);\n\n      }\n}\n","<section class=\"vh-100\" style=\"background-color: #eee;\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 25px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\n\n                  <form class=\"mx-1 mx-md-4\">\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fa fa-user fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.name\" type=\"text\" id=\"form3Example1c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fa fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.email\" type=\"email\" id=\"form3Example3c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" />\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\n                      </div>\n                    </div>\n\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fa fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input [(ngModel)]=\"form.password\" type=\"password\" id=\"form3Example4c\" class=\"form-control\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label>\n                      </div>\n                    </div>\n\n\n                    <div class=\"form-check d-flex justify-content-center mb-5\">\n                      <input [(ngModel)]=\"form.tos\" class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" [ngModelOptions]=\"{standalone: true}\" />\n                      <label class=\"form-check-label\" for=\"form2Example3\">\n                        I agree all statements in <a href=\"#!\">Terms of service</a>\n                      </label>\n                    </div>\n\n                    <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button  (click)=\"register()\" type=\"button\" class=\"btn btn-primary btn-lg\">Register</button>\n                    </div>\n\n                  </form>\n\n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n","<p>Amol Patil</p>\n<a href=\"http://github.com/djamol\">GitHUB</a>\n","import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from '../../model/movie.model';\nimport { MovieService } from '../../service/movie.service';\nimport { Category } from '../../model/category.model';\nimport { CategoryService } from '../../service/category.service';\nimport { AppComponent } from '../../app.component';\nimport { AuthService } from '../../service/auth.service';\nimport { Observer } from 'rxjs';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n    movies: Movie[] = [];\n    filteredMovies: any[] = [];\n    page_data:any;\n    unFilteredMovies:boolean=false;\n    searchKey: string = '';\n    category_id:any='0';\n    show :number =1;\n    selectedCategory: Category =new Category();\n  categories: Category[]=[];\n  isEditing :any[]= [];\n  selectedMovie: Movie = new Movie();\n  genreOptions = ['Romance', 'Drama', 'Action', 'Comedy', 'Sci-Fi', 'Thriller', 'Horror', 'Other'];\n  movieForm: NgForm | undefined;\n\n    constructor(private movieService: MovieService, private categoryService: CategoryService,private cdr: ChangeDetectorRef,\n        private main:AppComponent,private auth:AuthService) {}\n\n    ngOnInit(): void {\n      this.getMovies();\n      this.getCategories();\n      console.log(\"auth\",this.auth.getToken());\n      console.log(\"auth api\",this.auth.apiUrl);\n    }\n/*\n    getMovies() {\n      this.movieService.getMovies().subscribe((data: Movie[]) => {\n        this.movies = data;\n        this.filteredMovies = this.movies; // Initialize the filtered list\n      });\n    }\n*/\ntoggleEditing(movie:any) {\n    if (this.isEditing[movie.id]) {\n        this.isEditing[movie.id]=false;\n        this.editMovie(movie);\n        this.getMovies();\n    } else {\n      this.isEditing[movie.id] = true;\n    }\n  }\n  toggleEditingCategories(category:any) {\n    if (this.isEditing[category.id]) {\n        this.isEditing[category.id]=false;\n        this.editCategory(category);\n        this.getCategories();\n    } else {\n      this.isEditing[category.id] = true;\n    }\n  }\n\n     filterMovies() {\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredMovies = this.movies.filter(movie =>\n                movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredMovies=true;\n        return;\n        }\n        this.unFilteredMovies=false;\n        this.filteredMovies = this.movies.filter(movie =>\n          movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\ngetMovies() {\n    this.movieService.getMovies().subscribe(movies => {\n      this.movies = movies.data;\n      this.filteredMovies=this.movies;\n      this.page_data =movies;\n      this.unFilteredMovies=true;\n    });\n  }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n\n  addMovie() {\n\n    const observer: Observer<any> = {\n        next: response => {\n            this.getMovies();\n            this.selectedMovie = new Movie();\n            this.main.showMessage('Success','Successfully created a new movie.','');\n        },\n        error: error => {\n          console.log('Error:', error.error);\n          this.main.showMessage('Error :'+error.status,error.error.message,'',1);\n        },\n        complete: () => {\n          console.log('Complete');\n        }\n      };\n    this.movieService.createMovie(this.selectedMovie).subscribe(observer);\n\n    this.movieService.createMovie(this.selectedMovie).subscribe(() => {\n      this.getMovies();\n      this.selectedMovie = new Movie();\n      this.main.showMessage('Success','Successfully created a new movie.','');\n    });\n  }\n\n  editMovie(movie: Movie) {\n    this.movieService.updateMovie(movie.id, movie).subscribe(() => {\n      this.getMovies();\n      this.main.showMessage('Success','Movie successfully updated','');\n    });\n  }\n\n  deleteMovie(movie: Movie) {\n    this.movieService.deleteMovie(movie.id).subscribe(() => {\n      this.getMovies();\n      this.main.showMessage('Success','Movie successfully deleted','');\n    });\n  }\n\n  addCategory() {\n\n    this.categoryService.createCategory(this.selectedCategory).subscribe(() => {\n      this.getCategories();\n      this.selectedCategory = new Category();\n      this.main.showMessage('Success','Successfully created a new category.','');\n    });\n\n  }\n\n  editCategory(category: Category) {\n\n    this.categoryService.updateCategory(category.id, category).subscribe(() => {\n      this.getCategories();\n      this.main.showMessage('Success','Category successfully updated','');\n    });\n\n  }\n  removeRating(index: number): void {\n    this.selectedMovie.ratings.splice(index, 1);\n  }\n\n  addRating(): void {\n    this.selectedMovie.ratings.push({ source: '', value: '', total: '' });\n  }\n  deleteCategory(category: Category) {\n    this.categoryService.deleteCategory(category.id).subscribe(() => {\n      this.getCategories();\n      this.main.showMessage('Success','Category successfully deleted','');\n    });\n  }\n}\n","<div class=\"container\">\n        <div class=\"btn-group\">\n            <button type=\"button\" (click)=\"show=1\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Movies\n            </button>\n            <button type=\"button\" (click)=\"show=2\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Add Movie\n            </button>\n            <button type=\"button\" (click)=\"show=3\" class=\"btn btn-primary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Categories\n            </button>\n        </div>\n<div *ngIf=\"show==1\">\n    <h1>Movie List</h1>\n    <form>\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" value=\"\" placeholder=\"Search by Title\" [(ngModel)]=\"searchKey\" (input)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n      </div>\n      <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"category_id\" (change)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n          <option value=\"All\">All Categories</option>\n          <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n        </select>\n      </div>\n    </form>\n    <div class=\"container\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Director</th>\n              <th>Country</th>\n              <th>Awards</th>\n              <th>Category</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let movie of filteredMovies\">\n                <td>\n                    <ng-container *ngIf=\"!isEditing[movie.id]\">\n                        {{ movie.title }}\n                      </ng-container>\n                      <ng-container *ngIf=\"isEditing[movie.id]\">\n                        <input type=\"text\" [(ngModel)]=\"movie.title\" [ngModelOptions]=\"{standalone: true}\">\n                      </ng-container>\n                </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[movie.id]\">\n                    {{ movie.director }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[movie.id]\">\n                    <input type=\"text\" [(ngModel)]=\"movie.director\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[movie.id]\">\n                    {{ movie.country }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[movie.id]\">\n                    <input type=\"text\" [(ngModel)]=\"movie.country\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[movie.id]\">\n                    {{ movie.awards }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[movie.id]\">\n                    <input type=\"text\" [(ngModel)]=\"movie.awards\" [ngModelOptions]=\"{standalone: true}\">\n                  </ng-container>\n              </td>\n              <td >\n                <ng-container *ngIf=\"!isEditing[movie.id]\">\n                    {{ movie.category_id }}\n                  </ng-container>\n                  <ng-container *ngIf=\"isEditing[movie.id]\">\n                    <select [(ngModel)]=\"movie.category_id\" name=\"category_id\" id=\"category_id\" class=\"form-control\" required [ngModelOptions]=\"{standalone: true}\">\n                        <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n                      </select>\n                  </ng-container>\n              </td>\n              <td>\n                <button class=\"btn btn-primary\" (click)=\"toggleEditing(movie)\">Edit</button>\n                <button class=\"btn btn-danger\" (click)=\"deleteMovie(movie)\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <nav *ngIf=\"unFilteredMovies\" aria-label=\"Page navigation\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\" [class.disabled]=\"!page_data.prevPageUrl\">\n              <a *ngIf=\"page_data.prevPageUrl\" class=\"page-link\" href=\"{{ page_data.prevPageUrl }}\">&laquo; Previous</a>\n              <span *ngIf=\"!page_data.prevPageUrl\" class=\"page-link\">&laquo; Previous</span>\n            </li>\n            <li class=\"page-item\" [class.active]=\"page_data.currentPage === page_data.link.label\" *ngFor=\"let link of page_data.links\">\n              <a *ngIf=\"page_data.link.url\" class=\"page-link\" href=\"{{ page_data.link.url }}\">{{ link.label }}</a>\n              <span *ngIf=\"!page_data.link.url\" class=\"page-link\">{{ link.label }}</span>\n            </li>\n            <li class=\"page-item\" [class.disabled]=\"!page_data.nextPageUrl\">\n              <a *ngIf=\"page_data.nextPageUrl\" class=\"page-link\" href=\"{{ page_data.nextPageUrl }}\">Next &raquo;</a>\n              <span *ngIf=\"!page_data.nextPageUrl\" class=\"page-link\">Next &raquo;</span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n\n    </div>\n    </div>\n\n    <div *ngIf=\"show==2\">\n        <h2>Add Movie</h2>\n<form (ngSubmit)=\"addMovie()\" #movieForm=\"ngForm\">\n    <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input [(ngModel)]=\"selectedMovie.title\" name=\"title\" id=\"title\" placeholder=\"Title\" required class=\"form-control\"\n          [ngModelOptions]=\"{standalone: true}\" #title=\"ngModel\" />\n          <div *ngIf=\"title?.invalid && (title?.dirty || title?.touched)\">\n            <div *ngIf=\"title?.errors?.['required']\">Title is required.</div>\n\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category_id\">Categories</label>\n        <select [(ngModel)]=\"selectedMovie.category_id\" name=\"category_id\" id=\"category_id\" class=\"form-control\" required [ngModelOptions]=\"{standalone: true}\">\n            <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n        </select>\n    </div>\n      <div class=\"form-group\">\n        <label for=\"year\">Year</label>\n        <input [(ngModel)]=\"selectedMovie.year\" name=\"year\" id=\"year\" placeholder=\"Year\" required pattern=\"\\d{4}\"\n          class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" #year=\"ngModel\" />\n        <div *ngIf=\"year.invalid && (year.dirty || year.touched)\">\n          <div *ngIf=\"year?.errors?.['required']\">Year is required.</div>\n          <div *ngIf=\"year?.errors?.['pattern']\">Invalid year format (use 4 digits).</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"language\">Language</label>\n        <select [(ngModel)]=\"selectedMovie.language\" name=\"language\" id=\"language\" class=\"form-control\" required\n          [ngModelOptions]=\"{standalone: true}\" #language=\"ngModel\">\n          <option value=\"\" disabled>Select Language</option>\n          <option value=\"en\">English</option>\n          <option value=\"es\">Hindi</option>\n\n        </select>\n        <div *ngIf=\"language.invalid && (language.dirty || language.touched)\">\n          <div *ngIf=\"language.errors?.['required']\">Language is required.</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"genre\">Genre</label>\n        <select [(ngModel)]=\"selectedMovie.genre\" name=\"genre\" id=\"genre\" multiple=\"true\" class=\"form-control\"\n          [ngModelOptions]=\"{standalone: true}\" #genre=\"ngModel\">\n          <option *ngFor=\"let g of genreOptions\" value=\"{{g}}\">{{ g }}</option>\n        </select>\n        <div *ngIf=\"genre.invalid && (genre.dirty || genre.touched)\">\n          <div *ngIf=\"genre.errors?.['required']\">Genre is required.</div>\n        </div>\n      </div>\n\n<div class=\"form-group\">\n    <label for=\"director\">Director</label>\n    <input [(ngModel)]=\"selectedMovie.director\" name=\"director\" id=\"director\" placeholder=\"Director\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #director=\"ngModel\" />\n    <div *ngIf=\"director.invalid && (director.dirty || director.touched)\">\n      <div *ngIf=\"director.errors?.['required']\">Director is required.</div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"country\">Country</label>\n    <input [(ngModel)]=\"selectedMovie.country\" name=\"country\" id=\"country\" placeholder=\"Country\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #country=\"ngModel\" />\n    <div *ngIf=\"country.invalid && (country.dirty || country.touched)\">\n      <div *ngIf=\"country.errors?.['required']\">Country is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"awards\">Awards</label>\n    <input [(ngModel)]=\"selectedMovie.awards\" name=\"country\" id=\"country\" placeholder=\"Awards\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #awards=\"ngModel\" />\n    <div *ngIf=\"awards.invalid && (awards.dirty || awards.touched)\">\n      <div *ngIf=\"awards.errors?.['required']\">Awards is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"writer\">Writer</label>\n    <input [(ngModel)]=\"selectedMovie.writer\" name=\"writer\" id=\"writer\" placeholder=\"Writer\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #writer=\"ngModel\" />\n    <div *ngIf=\"writer.invalid && (writer.dirty || writer.touched)\">\n      <div *ngIf=\"writer.errors?.['required']\">Writer is required.</div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"actors\">Actors</label>\n    <input [(ngModel)]=\"selectedMovie.actors\" name=\"actors\" id=\"actors\" placeholder=\"Actors\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #actors=\"ngModel\" />\n    <div *ngIf=\"actors.invalid && (actors.dirty || actors.touched)\">\n      <div *ngIf=\"actors.errors?.['required']\">Actors are required.</div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"plot\">Plot</label>\n    <textarea [(ngModel)]=\"selectedMovie.plot\" name=\"plot\" id=\"plot\" placeholder=\"Plot\" required class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #plot=\"ngModel\"></textarea>\n    <div *ngIf=\"plot.invalid && (plot.dirty || plot.touched)\">\n      <div *ngIf=\"plot.errors?.['required']\">Plot is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"rated\">Rated</label>\n    <input [(ngModel)]=\"selectedMovie.rated\" name=\"rated\" id=\"rated\" placeholder=\"rated\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #rated=\"ngModel\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"released\">Released</label>\n    <input [(ngModel)]=\"selectedMovie.released\" name=\"released\" id=\"released\" placeholder=\"Released\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #released=\"ngModel\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"runtime\">runtime</label>\n    <input [(ngModel)]=\"selectedMovie.runtime\" name=\"runtime\" id=\"released\" placeholder=\"runtime\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #runtime=\"ngModel\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"poster\">poster</label>\n    <input [(ngModel)]=\"selectedMovie.poster\" name=\"poster\" id=\"released\" placeholder=\"poster\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #poster=\"ngModel\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"production\">production</label>\n    <input [(ngModel)]=\"selectedMovie.production\" name=\"production\" id=\"released\" placeholder=\"production\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #production=\"ngModel\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"ratings\">ratings</label>\n    <input [(ngModel)]=\"selectedMovie.ratings\" name=\"ratings\" id=\"ratings\" placeholder=\"ratings\"  class=\"form-control\"\n      [ngModelOptions]=\"{standalone: true}\" #ratings=\"ngModel\" />\n  </div>\n  <input   [(ngModel)]=\"selectedMovie.type\" type=\"hidden\" value=\"movie\"/>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"movieForm.invalid\">Add Movie</button>\n\n</form>\n</div>\n<div *ngIf=\"show==3\">\n\n        <h2 >Add Category</h2>\n        <form (ngSubmit)=\"addCategory()\">\n\n          <input [(ngModel)]=\"selectedCategory.name\" placeholder=\"Category Name\" required   [ngModelOptions]=\"{standalone: true}\"/>\n          <button type=\"submit\">Add Category</button>\n        </form>\n\n        <div class=\"container\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Category Name</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let category of categories\">\n                    <td>\n                        {{category.id}}\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"!isEditing[category.id]\">\n                            {{ category.name }}\n                          </ng-container>\n                          <ng-container *ngIf=\"isEditing[category.id]\">\n                            <input type=\"text\" [(ngModel)]=\"category.name\"  [ngModelOptions]=\"{standalone: true}\">\n                          </ng-container>\n                    </td>\n                  <td>\n                    <button class=\"btn btn-primary\" (click)=\"toggleEditingCategories(category)\">Edit</button>\n                    <button class=\"btn btn-danger\" (click)=\"deleteCategory(category)\">Delete</button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n    </div>\n\n\n  </div>\n","<div class=\"container\">\n    <div  class=\"row\">\n        <form>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" value=\"\" placeholder=\"Search by Title\" [(ngModel)]=\"searchKey\" (input)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n            </div>\n            <div class=\"form-group\">\n              <select class=\"form-control\" [(ngModel)]=\"category_id\" (change)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n                <option value=\"All\">All Categories</option>\n                <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n              </select>\n            </div>\n          </form>\n    </div>\n\n\n\n\n    <div class=\"row\" >\n        <div class=\"col-md-4\" *ngFor=\"let movie of filteredMovies\">\n            <img src=\"{{movie.poster}}\" class=\"card-img-top\" alt=\"{{ movie.title }}\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{movie.title}}</h5>\n              <h6 class=\"card-subtitle mb-2 text-muted\">{{movie.genre}}\n                <div class=\"d-flex\">\n                <p class=\"d-inline-block\" style=\"font-size: 10px;\" *ngFor=\"let rating of movie.ratings\">\n                    {{rating.source}}:{{rating.value/rating.total*5| number:'1.2-2'}}<br/>\n                    <ng-container *ngFor=\"let star of getStarsArray(rating.value/rating.total*5)\">\n                        <i [ngClass]=\"{'fa-star': star == 99, 'fa-star-half-o': star == 0.5, 'fa-star-o': star == 0 }\" class=\"fa\"></i>\n\n                    </ng-container>\n                </p>\n            </div>\n        </h6>\n              <p class=\"card-text\">{{movie.released}}</p>\n                  <p class=\"stars\">\n                <span>\n                  <a class=\"star-1\" (click)=\"addRating(movie.id,5)\">5</a>\n                  <a class=\"star-2\" (click)=\"addRating(movie.id,4)\">4</a>\n                  <a class=\"star-3\" (click)=\"addRating(movie.id,3)\">3</a>\n                  <a class=\"star-4\" (click)=\"addRating(movie.id,2)\">2</a>\n                  <a class=\"star-5\" (click)=\"addRating(movie.id,1)\">1</a>\n                </span>\n              </p>\n              <button class=\"btn btn-primary\">View</button>\n            </div>\n          </div>\n        </div>\n\n\n</div>\n","import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from '../../model/movie.model';\nimport { Category } from '../../model/category.model';\nimport { MovieService } from '../../service/movie.service';\nimport { CategoryService } from '../../service/category.service';\nimport { Observer } from 'rxjs';\nimport { AppComponent } from '../../../app/app.component';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n    movies: Movie[] = [];\n    filteredMovies: any[] = [];\n    categories: Category[]=[];\n    searchKey: string = '';\n    page_data:any;\n    category_id:any='0';\n    login_b:boolean=true;\n    unFilteredMovies:boolean=false;\n    constructor(private movieService: MovieService,private cdr: ChangeDetectorRef, private categoryService: CategoryService,private main:AppComponent) {}    ngOnInit(): void {\n    //this.login();\n    this.getMovies();\n    this.getCategories();\n    }\n/*\n    login() {\n      this.AuthService.login({\n        \"name\":\"amol\",\n        \"email\":\"amol@asf.in\",\n        \"password\":\"password\"\n    }).subscribe((data: any) => {\n        this.AuthService.cookie.storeCookie('token',data.token);\n        console.log(\"login\",data.token);\n    });\n    } */\n    buttonToogle(){\n        this.login_b=!this.login_b;\n    }\n    getMovies() {\n        this.movieService.getDashboard().subscribe(movies => {\n            this.movies = movies;\n            this.filteredMovies=this.movies;\n            this.page_data =movies;\n            this.unFilteredMovies=true;\n        });\n      }\n\n      filterMovies() {\n        console.log('cat',this.category_id);\n        console.log('cat',this.searchKey);\n\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredMovies = this.movies.filter(movie =>\n                movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredMovies=true;\n        return;\n        }\n        this.unFilteredMovies=false;\n        this.filteredMovies = this.movies.filter(movie =>\n          movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n  addRating(id:number,rating:number){\n    console.log(\"id\",id);\n    console.log(\"rating\",rating);\n    const observer: Observer<any> = {\n        next: response => {\n          console.log(\"response\",response);\n          this.main.showMessage('Success','Successfully added rating.','');\n        },\n        error: error => {\n          console.log('Error:', error.error);\n          this.main.showMessage('Error :'+error.status,error.error.message,'',1);\n        },\n        complete: () => {\n          console.log('Complete');\n        }\n      };\n    this.movieService.addRating({id:id,rating:rating}).subscribe(observer);\n  }\n  getStarsArray(rating: number): number[] {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 !== 0;\n    const emptyStars = 5 - Math.ceil(rating);\n\n    const starsArray: number[] = [];\n\n    for (let i = 0; i < fullStars; i++) {\n      starsArray.push(99);\n    }\n\n    if (hasHalfStar) {\n      starsArray.push(0.5);\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsArray.push(0);\n    }\n\n    return starsArray;\n  }\n\n}\n","export class Category {\n    id: number = 0;\n    name: string = '';\n  }\n","export class Movie {\n    id: number=0;\n    title: string='';\n    year: string='';\n    rated: string='';\n    released: string='';\n    runtime: string='';\n    genre: string[]=[]; // Assuming genre is an array of strings\n    director: string='';\n    writer: string='';\n    actors: string='';\n    plot: string='';\n    language: string='';\n    country: string='';\n    awards: string='';\n    poster: string='';\n    ratings: Rating[]=[];\n    meta_score: string='';\n    imdb_rating: string='';\n    imdb_votes: string='';\n    imdb_id: string='';\n    type: string='';\n    dvd: string='';\n    box_office: string='';\n    production: string='';\n    category_id: number=0;\n  }\n\n  export interface Rating {\n    source: string;\n    value: string;\n    total:string;\n  }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { catchError } from 'rxjs/operators';\n\nimport { CookieService } from './cookie.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    public apiUrl: any;\npublic adminStatus =false;\n\n  constructor(private http: HttpClient,private location:Location,public cookie :CookieService) {\n    this.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n//this.apiUrl=\"https://amol.com/api\"\n//console.log(\"apiURL\",this.apiUrl);\n\n  }\n  getApiUrl(endpoint: string): string {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  // HTTP headers, if needed\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n  };\n  getToken(){\n    return this.cookie.readCookie('token');\n  }\n\n  isAdmin(): Observable<any> {\n   let httpOptions = {};\n      let auth = 'Bearer ' + this.getToken();\n      console.log(\"auth test->\",auth.replaceAll('\"',''));\n      this.httpOptions ={\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': auth.replaceAll('\"','')\n          })\n        };\n      return this.http.get<any>(this.apiUrl+ \"/admin\", this.httpOptions);\n  }\n  login(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/login\", auth, this.httpOptions);\n  }\n  register(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/register\", auth, this.httpOptions).pipe(\n        catchError((error) => {\n            throw error;\n        })\n      );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../model/category.model';\nimport { Location } from '@angular/common';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n    public apiUrl: any;\n\n  constructor(private http: HttpClient,private location:Location,private auth:AuthService) {\n    this.apiUrl=this.auth.apiUrl;\n    console.log(\"api-categories\",this.apiUrl);\n\n  }\n  getApiUrl(endpoint: string): string {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  // HTTP headers, if needed\n  setHeader(){\n    let auth = 'Bearer ' + this.auth.getToken();\n    console.log(\"auth test->\",auth.replaceAll('\"',''));\n    this.httpOptions ={\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': auth.replaceAll('\"','')\n        })\n      };\n  }\n  httpOptions = {};\n  // Fetch all Categorys\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiUrl+ \"/categories\");\n  }\n\n  // Create a new Category\n  createCategory(Category: Category): Observable<Category> {\n    this.setHeader();\n    return this.http.post<Category>(this.apiUrl+ \"/categories\", Category, this.httpOptions);\n  }\n\n\n  // Update an existing Category\n  updateCategory(id: number, Category: Category): Observable<Category> {\n    this.setHeader();\n    const url = `${this.apiUrl}/categories/${id}`;\n    return this.http.put<Category>(url, Category, this.httpOptions);\n  }\n\n  // Delete a Category by ID\n  deleteCategory(id: number): Observable<void> {\n    this.setHeader();\n    const url = `${this.apiUrl}/categories/${id}`;\n    return this.http.delete<void>(url, this.httpOptions);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as CryptoJS from 'crypto-js';\n@Injectable()\nexport class CookieService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  public getCookie(name: string): string {\n    const cookies = this.document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return '';\n  }\n\n  public storeCookie(key:string,value:string){\n    const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(value), 'secretKey').toString();\n    const expirationDate = new Date();\n    expirationDate.setTime(expirationDate.getTime() + (60 * 60 * 1000)); // 1 hour from now\n    const cookieOptions = {\n    expires: expirationDate.toUTCString(),\n    path: '/'\n    };\n    document.cookie = `${key}=${encryptedData}; ${Object.entries(cookieOptions).map(([k, v]) => `${k}=${v}`).join('; ')}`;\n  }\n  public readCookie(key:string){\n   let value= this.getCookie(key);\n    return   CryptoJS.AES.decrypt(value, 'secretKey').toString(CryptoJS.enc.Utf8);\n  }\n  public delCookie(key:string){\n    document.cookie = `${key}=; expires=Mon, 01 Jan 2000 00:00:00 UTC; path=/`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../model/movie.model';\nimport { Location } from '@angular/common';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n    public apiUrl: any;\n    public token = '';\n  constructor(private http: HttpClient,private location:Location,private auth:AuthService) {\nthis.apiUrl=this.auth.apiUrl;\nconsole.log(\"api-movie\",this.apiUrl);\n  }\n  // HTTP headers, if needed\n  httpOptions = {};\n  setHeader(){\n    let auth = 'Bearer ' + this.auth.getToken();\n    console.log(\"auth test->\",auth.replaceAll('\"',''));\n    this.httpOptions ={\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': auth.replaceAll('\"','')\n        })\n      };\n  }\n  // Fetch all movies\n  getMovies(): Observable<any> {\n    return this.http.get<any>(this.apiUrl+ \"/movies\");\n  }\n  getDashboard(): Observable<any> {\n    return this.http.get<any>(this.apiUrl+ \"/dashboard\");\n  }\n  // Create a new movie\n  createMovie(movie: Movie): Observable<Movie> {\n    this.setHeader();\n    return this.http.post<Movie>(this.apiUrl+ \"/movies\", movie, this.httpOptions);\n  }\n\n  addRating(data: any): Observable<any> {\n    this.setHeader();\n    return this.http.post<Movie>(this.apiUrl+ \"/rating/add\", data, this.httpOptions);\n  }\n\n  // Update an existing movie\n  updateMovie(id: number, movie: Movie): Observable<Movie> {\n    this.setHeader();\n    const url = `${this.apiUrl}/movies/${id}`;\n    return this.http.put<Movie>(url, movie, this.httpOptions);\n  }\n\n  // Delete a movie by ID\n  deleteMovie(id: number): Observable<void> {\n    this.setHeader();\n    const url = `${this.apiUrl}/movies/${id}`;\n    return this.http.delete<void>(url, this.httpOptions);\n  }\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["RouterModule","HomeComponent","AboutComponent","AdminComponent","LoginComponent","RegisterComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","AuthService","token","getToken","ngOnInit","adminStatus","checkAdmin","isAdmin","subscribe","res","console","log","status","showMessage","title","message","time","err","flag_status","notification_status","show","setTimeout","logout","cookie","delCookie","location","reload","selectors","decls","vars","consts","template","BrowserModule","FormsModule","HttpClientModule","MovieService","CategoryService","CookieService","AppService","AppModule","bootstrap","declarations","http","apiUrl","getApiUrl","window","href","replace","endpoint","domainUrl","prepareExternalUrl","addDefaultParam","method","data","user_token","Object","keys","map","k","encodeURIComponent","join","factory","providedIn","router","main","login","observer","next","response","storeCookie","admin","navigate","error","complete","form","ctx","register","readCookie","Movie","Category","movieService","categoryService","cdr","auth","getMovies","getCategories","toggleEditing","movie","isEditing","id","editMovie","toggleEditingCategories","category","editCategory","filterMovies","category_id","filteredMovies","movies","filter","toLowerCase","includes","searchKey","unFilteredMovies","detectChanges","page_data","categories","addMovie","selectedMovie","createMovie","updateMovie","deleteMovie","addCategory","createCategory","selectedCategory","updateCategory","removeRating","index","ratings","splice","addRating","push","source","value","total","deleteCategory","buttonToogle","login_b","getDashboard","rating","getStarsArray","fullStars","Math","floor","hasHalfStar","emptyStars","ceil","starsArray","i","HttpHeaders","catchError","headers","httpOptions","replaceAll","get","post","pipe","setHeader","url","put","delete","DOCUMENT","CryptoJS","document","getCookie","name","cookies","split","length","trim","startsWith","substring","key","encryptedData","AES","encrypt","JSON","stringify","toString","expirationDate","Date","setTime","getTime","cookieOptions","expires","toUTCString","entries","v","decrypt","enc","Utf8","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[22]}