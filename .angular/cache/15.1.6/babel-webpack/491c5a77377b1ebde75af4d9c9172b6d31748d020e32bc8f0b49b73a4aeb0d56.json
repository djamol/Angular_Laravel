{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(movieService, cdr, categoryService) {\n    this.movieService = movieService;\n    this.cdr = cdr;\n    this.categoryService = categoryService;\n    this.movies = [];\n    this.filteredMovies = [];\n    this.categories = [];\n    this.searchKey = '';\n    this.category_id = '0';\n    this.login_b = true;\n    this.unFilteredMovies = false;\n  }\n  ngOnInit() {\n    //this.login();\n    this.getMovies();\n    this.getCategories();\n  }\n  /*\n      login() {\n        this.AuthService.login({\n          \"name\":\"amol\",\n          \"email\":\"amol@asf.in\",\n          \"password\":\"password\"\n      }).subscribe((data: any) => {\n          this.AuthService.cookie.storeCookie('token',data.token);\n          console.log(\"login\",data.token);\n      });\n      } */\n  buttonToogle() {\n    this.login_b = !this.login_b;\n  }\n  getMovies() {\n    this.movieService.getMovies().subscribe(movies => {\n      this.movies = movies;\n      this.filteredMovies = this.movies;\n      this.page_data = movies;\n      this.unFilteredMovies = true;\n    });\n  }\n  filterMovies() {\n    console.log('cat', this.category_id);\n    console.log('cat', this.searchKey);\n    if (this.category_id == 'All' || this.category_id == 0) {\n      this.filteredMovies = this.movies.filter(movie => movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n      this.unFilteredMovies = true;\n      return;\n    }\n    this.unFilteredMovies = false;\n    this.filteredMovies = this.movies.filter(movie => movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id);\n    this.cdr.detectChanges();\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n  getStarsArray(rating) {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 !== 0;\n    const emptyStars = 5 - Math.ceil(rating);\n    const starsArray = [];\n    for (let i = 0; i < fullStars; i++) {\n      starsArray.push(99);\n    }\n    if (hasHalfStar) {\n      starsArray.push(0.5);\n    }\n    for (let i = 0; i < emptyStars; i++) {\n      starsArray.push(0);\n    }\n    console.log(\"starts\", rating);\n    console.log(\"starts ->\", starsArray);\n    return starsArray;\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","HomeComponent","constructor","movieService","cdr","categoryService","ngOnInit","getMovies","getCategories","buttonToogle","login_b","subscribe","movies","filteredMovies","page_data","unFilteredMovies","filterMovies","console","log","category_id","searchKey","filter","movie","title","toLowerCase","includes","detectChanges","categories","getStarsArray","rating","fullStars","Math","floor","hasHalfStar","emptyStars","ceil","starsArray","i","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/var/www/html/openpbx/resources/angular/src/app/component/home/home.component.ts"],"sourcesContent":["import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from '../../model/movie.model';\nimport { Category } from '../../model/category.model';\nimport { MovieService } from '../../service/movie.service';\nimport { CategoryService } from '../../service/category.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n    movies: Movie[] = [];\n    filteredMovies: any[] = [];\n    categories: Category[]=[];\n    searchKey: string = '';\n    page_data:any;\n    category_id:any='0';\n    login_b:boolean=true;\n    unFilteredMovies:boolean=false;\n    constructor(private movieService: MovieService,private cdr: ChangeDetectorRef, private categoryService: CategoryService) {}\n    ngOnInit(): void {\n    //this.login();\n    this.getMovies();\n    this.getCategories();\n    }\n/*\n    login() {\n      this.AuthService.login({\n        \"name\":\"amol\",\n        \"email\":\"amol@asf.in\",\n        \"password\":\"password\"\n    }).subscribe((data: any) => {\n        this.AuthService.cookie.storeCookie('token',data.token);\n        console.log(\"login\",data.token);\n    });\n    } */\n    buttonToogle(){\n        this.login_b=!this.login_b;\n    }\n    getMovies() {\n        this.movieService.getMovies().subscribe(movies => {\n            this.movies = movies;\n            this.filteredMovies=this.movies;\n            this.page_data =movies;\n            this.unFilteredMovies=true;\n        });\n      }\n\n      filterMovies() {\n        console.log('cat',this.category_id);\n        console.log('cat',this.searchKey);\n\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredMovies = this.movies.filter(movie =>\n                movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredMovies=true;\n        return;\n        }\n        this.unFilteredMovies=false;\n        this.filteredMovies = this.movies.filter(movie =>\n          movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n\n  getStarsArray(rating: number): number[] {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 !== 0;\n    const emptyStars = 5 - Math.ceil(rating);\n\n    const starsArray: number[] = [];\n\n    for (let i = 0; i < fullStars; i++) {\n      starsArray.push(99);\n    }\n\n    if (hasHalfStar) {\n      starsArray.push(0.5);\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsArray.push(0);\n    }\nconsole.log(\"starts\",rating);\nconsole.log(\"starts ->\",starsArray);\n\n    return starsArray;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}