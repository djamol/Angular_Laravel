{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/movie.service\";\nimport * as i2 from \"../../service/category.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction HomeComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2.name);\n  }\n}\nfunction HomeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10);\n    i0.ɵɵelement(2, \"img\", 11);\n    i0.ɵɵelementStart(3, \"div\", 12)(4, \"h5\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const movie_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", movie_r3.title);\n    i0.ɵɵproperty(\"src\", movie_r3.poster, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r3.plot);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class HomeComponent {\n  constructor(movieService, cdr, categoryService) {\n    this.movieService = movieService;\n    this.cdr = cdr;\n    this.categoryService = categoryService;\n    this.movies = [];\n    this.filteredMovies = [];\n    this.categories = [];\n    this.searchKey = '';\n    this.category_id = '0';\n    this.login_b = true;\n    this.unFilteredMovies = false;\n  }\n  ngOnInit() {\n    //this.login();\n    this.getMovies();\n    this.getCategories();\n  }\n  /*\n      login() {\n        this.AuthService.login({\n          \"name\":\"amol\",\n          \"email\":\"amol@asf.in\",\n          \"password\":\"password\"\n      }).subscribe((data: any) => {\n          this.AuthService.cookie.storeCookie('token',data.token);\n          console.log(\"login\",data.token);\n      });\n      } */\n  buttonToogle() {\n    this.login_b = !this.login_b;\n  }\n  getMovies() {\n    this.movieService.getMovies().subscribe(movies => {\n      this.movies = movies.data;\n      this.filteredMovies = this.movies;\n      this.page_data = movies;\n      this.unFilteredMovies = true;\n    });\n  }\n  filterMovies() {\n    if (this.category_id == 'All' || this.category_id == 0) {\n      this.filteredMovies = this.movies.filter(movie => movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n      this.unFilteredMovies = true;\n      return;\n    }\n    this.unFilteredMovies = false;\n    this.filteredMovies = this.movies.filter(movie => movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id);\n    this.cdr.detectChanges();\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MovieService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.CategoryService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 12,\n  vars: 8,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"form-group\"], [\"type\", \"text\", \"value\", \"\", \"placeholder\", \"Search by Title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\", \"input\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\", \"change\"], [\"value\", \"All\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"cols\", \"3\", \"rowHeight\", \"200px\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"card\"], [1, \"card-img-top\", 3, \"src\", \"alt\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\")(3, \"div\", 2)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.searchKey = $event;\n      })(\"input\", function HomeComponent_Template_input_input_4_listener() {\n        return ctx.filterMovies();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.category_id = $event;\n      })(\"change\", function HomeComponent_Template_select_change_6_listener() {\n        return ctx.filterMovies();\n      });\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"All Categories\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, HomeComponent_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵtemplate(11, HomeComponent_div_11_Template, 8, 4, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchKey)(\"ngModelOptions\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.category_id)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HomeComponent","constructor","movieService","cdr","categoryService","ngOnInit","getMovies","getCategories","buttonToogle","login_b","subscribe","movies","data","filteredMovies","page_data","unFilteredMovies","filterMovies","category_id","filter","movie","title","toLowerCase","includes","searchKey","detectChanges","categories","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/var/www/html/openpbx/resources/angular/src/app/component/home/home.component.html","/var/www/html/openpbx/resources/angular/src/app/component/home/home.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div  class=\"row\">\n        <form>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" value=\"\" placeholder=\"Search by Title\" [(ngModel)]=\"searchKey\" (input)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n            </div>\n            <div class=\"form-group\">\n              <select class=\"form-control\" [(ngModel)]=\"category_id\" (change)=\"filterMovies()\" [ngModelOptions]=\"{standalone: true}\">\n                <option value=\"All\">All Categories</option>\n                <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n              </select>\n            </div>\n          </form>\n    </div>\n    <div cols=\"3\" rowHeight=\"200px\">\n        <div *ngFor=\"let movie of movies\">\n          <div class=\"card\">\n            <img [src]=\"movie.poster\" alt=\"{{ movie.title }}\" class=\"card-img-top\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ movie.title }}</h5>\n              <p class=\"card-text\">{{ movie.plot }}</p><!--\n              <a [routerLink]=\"['/movie', movie.id]\" class=\"btn btn-primary\">View Details</a>-->\n            </div>\n          </div>\n        </div>\n    </div>\n\n\n\n</div>\n","import {  Component, OnChanges, SimpleChanges,ChangeDetectorRef   } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Movie } from '../../model/movie.model';\nimport { Category } from '../../model/category.model';\nimport { MovieService } from '../../service/movie.service';\nimport { CategoryService } from '../../service/category.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n    movies: Movie[] = [];\n    filteredMovies: any[] = [];\n    categories: Category[]=[];\n    searchKey: string = '';\n    page_data:any;\n    category_id:any='0';\n    login_b:boolean=true;\n    unFilteredMovies:boolean=false;\n    constructor(private movieService: MovieService,private cdr: ChangeDetectorRef, private categoryService: CategoryService) {}\n    ngOnInit(): void {\n    //this.login();\n    this.getMovies();\n    this.getCategories();\n    }\n/*\n    login() {\n      this.AuthService.login({\n        \"name\":\"amol\",\n        \"email\":\"amol@asf.in\",\n        \"password\":\"password\"\n    }).subscribe((data: any) => {\n        this.AuthService.cookie.storeCookie('token',data.token);\n        console.log(\"login\",data.token);\n    });\n    } */\n    buttonToogle(){\n        this.login_b=!this.login_b;\n    }\n    getMovies() {\n        this.movieService.getMovies().subscribe(movies => {\n            this.movies = movies.data;\n            this.filteredMovies=this.movies;\n            this.page_data =movies;\n            this.unFilteredMovies=true;\n        });\n      }\n\n      filterMovies() {\n        if(this.category_id=='All' ||this.category_id==0){\n        this.filteredMovies = this.movies.filter(movie =>\n                movie.title.toLowerCase().includes(this.searchKey.toLowerCase()));\n        this.unFilteredMovies=true;\n        return;\n        }\n        this.unFilteredMovies=false;\n        this.filteredMovies = this.movies.filter(movie =>\n          movie.title.toLowerCase().includes(this.searchKey.toLowerCase()) && movie.category_id == this.category_id)\n        ;\n        this.cdr.detectChanges();\n\n       }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}