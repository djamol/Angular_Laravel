{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nexport class AppService {\n  constructor(http, location) {\n    this.http = http;\n    this.location = location;\n    this.apiUrl = this.getApiUrl('api');\n    this.apiUrl = window.location.href.replace('/assets/angular', '');\n    this.apiUrl = this.apiUrl + \"api\";\n    console.log(\"apiURL\", this.apiUrl);\n  }\n  getApiUrl(endpoint) {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  addDefaultParam(method = \"post\", data = {}) {\n    data = {\n      ...data,\n      user_token: 'test'\n    };\n    // data['website_id'] = data['website_id']||this.website_id;\n    // data['user_token'] = this.user_token;\n    if (method == \"post\") {\n      return data;\n    } else {\n      return typeof data == \"string\" ? data : Object.keys(data).map(function (k) {\n        return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n      }).join(\"&\");\n    }\n  }\n}\nAppService.ɵfac = function AppService_Factory(t) {\n  return new (t || AppService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Location));\n};\nAppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppService,\n  factory: AppService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,UAAU;EAGnBC,YAAoBC,IAAgB,EAASC,QAAiB;IAA1C,SAAI,GAAJD,IAAI;IAAqB,aAAQ,GAARC,QAAQ;IACzD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC;IACnC,IAAI,CAACD,MAAM,GAAIE,MAAM,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC;IAEjE,IAAI,CAACJ,MAAM,GAAC,IAAI,CAACA,MAAM,GAAC,KAAK;IAC7BK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAACN,MAAM,CAAC;EAC3B;EAEAC,SAAS,CAACM,QAAgB;IACxB,MAAMC,SAAS,GAAG,IAAI,CAACT,QAAQ,CAACU,kBAAkB,CAAC,EAAE,CAAC;IACtD,MAAMT,MAAM,GAAG,GAAGQ,SAAS,QAAQD,QAAQ,EAAE;IAC7C,OAAOP,MAAM;EACf;EACAU,eAAe,CAACC,SAAiB,MAAM,EAAEC,OAAY,EAAE;IACrDA,IAAI,GAAG;MACH,GAAGA,IAAI;MACPC,UAAU,EAAE;KACb;IACD;IACA;IACA,IAAIF,MAAM,IAAI,MAAM,EAAE;MACpB,OAAOC,IAAI;KACZ,MAAM;MACL,OAAO,OAAOA,IAAI,IAAI,QAAQ,GAC1BA,IAAI,GACJE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CACdI,GAAG,CAAC,UAAUC,CAAC;QACd,OAAOC,kBAAkB,CAACD,CAAC,CAAC,GAAG,GAAG,GAAGC,kBAAkB,CAACN,IAAI,CAACK,CAAC,CAAC,CAAC;MAClE,CAAC,CAAC,CACDE,IAAI,CAAC,GAAG,CAAC;;EAGtB;;AAnCOvB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAwB,SAAVxB,UAAU;EAAAyB,YAFT;AAAM","names":["AppService","constructor","http","location","apiUrl","getApiUrl","window","href","replace","console","log","endpoint","domainUrl","prepareExternalUrl","addDefaultParam","method","data","user_token","Object","keys","map","k","encodeURIComponent","join","factory","providedIn"],"sourceRoot":"","sources":["/var/www/html/openpbx/resources/angular/src/app/app.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from \"@angular/core\";\n// import {Http, Response,Headers} from '@angular/http';\nimport { Location } from '@angular/common';\n\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { BehaviorSubject } from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n    public apiUrl: any;\n\n    constructor(private http: HttpClient,private location:Location) {\nthis.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\n\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n      }\n\n      getApiUrl(endpoint: string): string {\n        const domainUrl = this.location.prepareExternalUrl('');\n        const apiUrl = `${domainUrl}/api/${endpoint}`;\n        return apiUrl;\n      }\n      addDefaultParam(method: string = \"post\", data: any = {}) {\n        data = {\n            ...data,\n            user_token: 'test',\n          };\n          // data['website_id'] = data['website_id']||this.website_id;\n          // data['user_token'] = this.user_token;\n          if (method == \"post\") {\n            return data;\n          } else {\n            return typeof data == \"string\"\n              ? data\n              : Object.keys(data)\n                  .map(function (k) {\n                    return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n                  })\n                  .join(\"&\");\n          }\n\n      }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}