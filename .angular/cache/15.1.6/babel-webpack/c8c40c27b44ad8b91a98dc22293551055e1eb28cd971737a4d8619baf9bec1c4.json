{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./cookie.service\";\nexport class AuthService {\n  constructor(http, location, cookie) {\n    this.http = http;\n    this.location = location;\n    this.cookie = cookie;\n    // HTTP headers, if needed\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.apiUrl = this.getApiUrl('api');\n    this.apiUrl = window.location.href.replace('/assets/angular', '');\n    this.apiUrl = this.apiUrl + \"api\";\n    console.log(\"apiURL\", this.apiUrl);\n    //this.apiUrl=\"https://amol.com/api\"\n    //console.log(\"apiURL\",this.apiUrl);\n  }\n\n  getApiUrl(endpoint) {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  getToken() {\n    return this.cookie.readCookie('token');\n  }\n  login(auth) {\n    return this.http.post(this.apiUrl + \"/login\", auth, this.httpOptions);\n  }\n  register(auth) {\n    return this.http.post(this.apiUrl + \"/register\", auth, this.httpOptions).pipe(catchError(error => {\n      throw error;\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Location), i0.ɵɵinject(i3.CookieService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,UAAU,QAAQ,gBAAgB;;;;;AAM3C,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB,EAASC,QAAiB,EAAQC,MAAqB;IAAvE,SAAI,GAAJF,IAAI;IAAqB,aAAQ,GAARC,QAAQ;IAAiB,WAAM,GAANC,MAAM;IAc5E;IACA,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAC;KAC/D;IAhBC,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC;IACvC,IAAI,CAACD,MAAM,GAAIE,MAAM,CAACL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC;IACjE,IAAI,CAACJ,MAAM,GAAC,IAAI,CAACA,MAAM,GAAC,KAAK;IAC7BK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAACN,MAAM,CAAC;IACjC;IACA;EAEE;;EACAC,SAAS,CAACM,QAAgB;IACxB,MAAMC,SAAS,GAAG,IAAI,CAACX,QAAQ,CAACY,kBAAkB,CAAC,EAAE,CAAC;IACtD,MAAMT,MAAM,GAAG,GAAGQ,SAAS,QAAQD,QAAQ,EAAE;IAC7C,OAAOP,MAAM;EACf;EAKAU,QAAQ;IACN,OAAO,IAAI,CAACZ,MAAM,CAACa,UAAU,CAAC,OAAO,CAAC;EACxC;EACAC,KAAK,CAACC,IAAS;IACb,OAAO,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAM,IAAI,CAACd,MAAM,GAAE,QAAQ,EAAEa,IAAI,EAAE,IAAI,CAACE,WAAW,CAAC;EAC3E;EACAC,QAAQ,CAACH,IAAS;IAChB,OAAO,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAM,IAAI,CAACd,MAAM,GAAE,WAAW,EAAEa,IAAI,EAAE,IAAI,CAACE,WAAW,CAAC,CAACE,IAAI,CAC7ExB,UAAU,CAAEyB,KAAK,IAAI;MACjB,MAAMA,KAAK;IACf,CAAC,CAAC,CACH;EACL;;AAnCWxB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAyB,SAAXzB,WAAW;EAAA0B,YAFV;AAAM","names":["HttpHeaders","catchError","AuthService","constructor","http","location","cookie","headers","apiUrl","getApiUrl","window","href","replace","console","log","endpoint","domainUrl","prepareExternalUrl","getToken","readCookie","login","auth","post","httpOptions","register","pipe","error","factory","providedIn"],"sourceRoot":"","sources":["/var/www/html/openpbx/resources/angular/src/app/service/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { catchError } from 'rxjs/operators';\n\nimport { CookieService } from './cookie.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    public apiUrl: any;\n\n\n  constructor(private http: HttpClient,private location:Location,public cookie :CookieService) {\n    this.apiUrl = this.getApiUrl('api');\nthis.apiUrl =  window.location.href.replace('/assets/angular','');\nthis.apiUrl=this.apiUrl+\"api\";\nconsole.log(\"apiURL\",this.apiUrl);\n//this.apiUrl=\"https://amol.com/api\"\n//console.log(\"apiURL\",this.apiUrl);\n\n  }\n  getApiUrl(endpoint: string): string {\n    const domainUrl = this.location.prepareExternalUrl('');\n    const apiUrl = `${domainUrl}/api/${endpoint}`;\n    return apiUrl;\n  }\n  // HTTP headers, if needed\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n  };\n  getToken(){\n    return this.cookie.readCookie('token');\n  }\n  login(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/login\", auth, this.httpOptions);\n  }\n  register(auth: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl+ \"/register\", auth, this.httpOptions).pipe(\n        catchError((error) => {\n            throw error;\n        })\n      );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}